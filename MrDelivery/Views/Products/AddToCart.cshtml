@*@using MrDelivery.ViewModels*@
@model MrDelivery.ViewModels.CartViewModel
@{
    ViewData["Title"] = "AddToCart";
    Layout = "~/Views/Shared/CartLayout.cshtml";
}

<style>
    .cart-totals {
        background: #fff;
        border: 0;
        padding: 20px;
        border-radius: 6px;
        box-shadow: 0 2px 5px rgba(0,0,0,.2);
    }
    .cart-totals {
        display: table;
        width: 100%;
        border-top: 2px dotted #eee;
    }
    .cart-totals .row {
        display: table-row;
    }
    .cart-totals .row span {
        display: table-cell;
        font-size: 14px;
        color: #31313c;
        padding: 0 0 15px;
        font-weight: 400;
    }
</style>
<style>
    .add-to-cart-button {
        line-height: 80px;
        height: 80px;
    }

    .add-to-cart-button {
        bottom: 0;
        width: 100%;
        left: 0;
        margin: 0;
        -webkit-border-radius: 0;
        -moz-border-radius: 0;
        border-radius: 0;
    }

    .button.disabled, .button[disabled], .submit-button.is-working, .submit-button[disabled] {
        background-color: #ddd;
        color: #888;
    }

    .submit-button {
        background: #ffe530;
        height: auto;
        font-size: 16px;
    }

    .submit-button {
        background: #ffe700;
        margin: 15px 5px 0;
        font-size: 14px;
        font-weight: 700;
        padding: 0;
        text-align: center;
        -webkit-border-radius: 2px;
        -moz-border-radius: 2px;
        border-radius: 2px;
        cursor: pointer;
        display: block;
        -webkit-transition: background .2s linear,color .2s linear;
        -o-transition: background .2s linear,color .2s linear;
        -moz-transition: background .2s linear,color .2s linear;
        transition: background .2s linear,color .2s linear;
        border: 0;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        color: #31312c;
        height: 50px;
        line-height: 50px;
        position: relative;
    }
</style>

@{
    decimal sum = 0;
    decimal sumquantity = 0;
    decimal service = 20;
    decimal Quantity = 1;
    string r = "R";
}
 <form method="post" asp-action="AddToCart" asp-controller="Products">
     <div class="container">
         <h2 style="color:#000000">@ViewBag.message</h2>
         <p style="color:#000000"> @ViewBag.message2</p>
         <br/>
         @foreach (var itams in ViewBag.itemsAdded)
         {
             sum = sum + (@itams.UnitPrice + service);
             sumquantity = sum + (itams.UnitPrice * Quantity);
             @foreach (var item in ViewBag.itemRes)
             {
                 <h2 style="text-align:center">@item.Name</h2>
             }
             <div class="cart-totals">
                 @*<button asp-action="RemoveFromCart" asp-controller="Products" asp-route-id="@itams.Id" class="btn btn-default"><span class="close">&times;</span></button>*@
                 <a asp-action="RemoveFromCart" asp-controller="Products" asp-route-id="@itams.Id" class="close"><span>&times;</span></a>       
                  @*<span class="close">&times;</span>*@
                 <section style="font-weight:900">@itams.ItemName</section>
                 <section>@itams.Description</section>
                
             </div><br />
             <div class="cart-totals">
                 <div class="row">
                     <span style="font-weight:700">Subtotal</span>
                     @*<p>@r @itams.UnitPrice.ToString("N2")</p><br />*@
                         <p id="price"><span style="color:#fff;">MRP-></span> @r @itams.UnitPrice.ToString("N2")  </p>
                         <p >Service Fee</p>
                         <p>@r 20.00</p><br />
                         @*<span>Total</span>
                         @*<p id="Totprice">@r @String.Format("{0:0.00}", sum * Quantity)</p>*@
                         <p id="amount"> Total Price: @r @String.Format("{0:0.00}", sum * Quantity) </p>                 
                 </div>
                
             </div>
            
            <h2>Quantity</h2>
            <div style="display:inline-block">
                @*<input name="quantity" type="hidden" value="-1" onchange='getamount(this.value);'/>
                <button type="button" class="quantity-left-minus btn btn-default" id="quantityMinusId" data-type="minus" onchange='getamount(this.value);'><span class="glyphicon glyphicon-minus"></span></button>*@
                <input type="text" name='item quantity' id='item' class="form-control input-number" value="1" min="1" max="100" onchange='getamount(this.value);' >
                <input type="hidden" asp-for="@Model.Quantity" name="quantity" onchange='getamount(this.value);'/>
                @*<input name="quantity" type="hidden" value="1" onchange='getamount(this.value);'/>
                <button type="button" class="quantity-right-plus btn btn-default" id="quantityAddId" data-type="plus" onchange='getamount(this.value);'><span class="glyphicon glyphicon-plus"></span></button>*@

            </div>
            
         }
         <br/><br/>
         <a href="@Url.Action("Checkout","Checkout", new { id=Model.Id})" class="submit-button add-to-cart-button" id="amount">Checkout</a>
     </div>
    
 </form>  
<environment include="Development">
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Get the modal
        var modal = document.getElementById('myModal');

        // Get the button that opens the modal
        var btn = document.getElementById("myBtn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>
    <script  type="text/javascript">
        function update() {
            var quantitycount = 0;
            var price = document.getElementById("Unitprice").value;
            var quantity = document.getElementById("quantity").value;

            var addQuantityButton = document.getElementById('quantityAddId');
            var minusQuantityButton = document.getElementById('quantityMinusId');

            var Totalprice = price * quantity;

            addQuantityButton.addEventListener('click', function () {
                alert('Message from add quantity button');
                $('#quantity').val(quantity + 1);
            }, false);

            minusQuantityButton.addEventListener('click', function () {
                alert('Message from minus quantity button');
                if (quantity > 0) {
                    $('#quantity').val(quantity - 1);
                }
            }, false);

            document.getElementById("TotalPrice").value = Totalprice

        }        
    </script>
</environment>

<script>
     function getamount(value) {
            var url = '@Url.Action("Checkout", "Checkout", new { id = Model.Id })';
            var service = 20.00;
            var price = $("#price").html().replace(/[^\d.]/g, '');
            var amount = parseFloat(value) * parseFloat(price) + service;
            //alert(amount);
            $("#amount").html(" Total Price: R " + amount);
            $.post(url, null,
                function (data) {
                    $("#amount")[0].innerHTML = data;
             });
     }

     $(document).ready(function () {

            var quantitiy = 0;
            $('.quantity-right-plus').click(function (e) {

                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var quantity = parseInt($('#item').val());

                // If is not undefined

                $('#item').val(quantity + 1);
                // Increment

            });

            $('.quantity-left-minus').click(function (e) {
                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var quantity = parseInt($('#item').val());

                // If is not undefined

                // Increment
                if (quantity > 0) {
                    $('#item').val(quantity - 1);
                }
            });

        });



</script>